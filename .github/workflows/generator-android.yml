name: Custom Android Client Generator
run-name: Custom Android Client Generator
on:
  workflow_dispatch:
    inputs:
      server:
        description: 'Rendezvous Server'
        required: true
        default: ''
        type: string
      key:
        description: 'Public Key'
        required: true
        default: ''
        type: string
      apiServer:
        description: 'API Server'
        required: true
        default: ''
        type: string
      custom:
        description: "Custom JSON"
        required: true
        default: ''
        type: string
      uuid:
        description: "uuid of request"
        required: true
        default: ''
        type: string
      iconlink:
        description: "icon link"
        required: false
        default: 'false'
        type: string
      logolink:
        description: "logo link"
        required: false
        default: 'false'
        type: string
      appname:
        description: "app name"
        required: true
        default: 'rustdesk'
        type: string
      filename:
        description: "Filename"
        required: true
        default: 'rustdesk'
        type: string
      extras:
        description: "extra inputs in json"
        required: true
        default: '{}'
        type: string
      auto_screen_recording:
        description: "Enable auto screen recording on app startup"
        required: true
        default: 'true'
        type: string
        options:
          - 'true'
          - 'false'


env:
  SCITER_RUST_VERSION: "1.75" # https://github.com/rustdesk/rustdesk/discussions/7503, also 1.78 has ABI change which causes our sciter version not working, https://blog.rust-lang.org/2024/03/30/i128-layout-update.html
  RUST_VERSION: "1.75" # sciter failed on m1 with 1.78 because of https://blog.rust-lang.org/2024/03/30/i128-layout-update.html
  CARGO_NDK_VERSION: "3.1.2"
  SCITER_ARMV7_CMAKE_VERSION: "3.29.7"
  SCITER_NASM_DEBVERSION: "2.14-1"
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.24.5"
  ANDROID_FLUTTER_VERSION: "3.24.5"
  # for arm64 linux because official Dart SDK does not work
  FLUTTER_ELINUX_VERSION: "3.16.9"
  TAG_NAME: "${{ inputs.upload-tag }}"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  # vcpkg version: 2024.07.12
  VCPKG_COMMIT_ID: "120deac3062162151622ca4860575a33844ba10b"
  ARMV7_VCPKG_COMMIT_ID: "6f29f12e82a8293156836ad81cc9bf5af41fe836"
  VERSION: "${{ fromJson(inputs.extras).version }}"
  NDK_VERSION: "r27c"
  #signing keys env variable checks
  ANDROID_SIGNING_KEY: "${{ secrets.ANDROID_SIGNING_KEY }}"
  MACOS_P12_BASE64: "${{ secrets.MACOS_P12_BASE64 }}"
  UPLOAD_ARTIFACT: 'true'
  SIGN_BASE_URL: "${{ secrets.SIGN_BASE_URL }}"
  STATUS_URL: "${{ secrets.GENURL }}/updategh"
  AUTO_SCREEN_RECORDING: "${{ inputs.auto_screen_recording }}"

jobs:
  generate-bridge-linux:
    uses: ./.github/workflows/bridge.yml
    with:
      version: ${{ fromJson(inputs.extras).version }}

  build-rustdesk-android:
    needs: [generate-bridge-linux]
    name: build rustdesk android apk ${{ matrix.job.target }}
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              arch: aarch64,
              target: aarch64-linux-android,
              os: ubuntu-24.04,

              reltype: release,
              suffix: ""
            }
          - {
              arch: armv7,
              target: armv7-linux-androideabi,
              os: ubuntu-24.04,

              reltype: release,
              suffix: ""
            }
          - {
              arch: x86_64,
              target: x86_64-linux-android,
              os: ubuntu-24.04,

              reltype: release,
              suffix: ""
            }
          - {
              arch: x86,
              target: i686-linux-android,
              os: ubuntu-24.04,

              reltype: release,
              suffix: ""
            }

    steps:
      - name: Update job status 5%
        run: |
          curl -X POST \
            ${{ env.STATUS_URL }} \
            -H 'Content-Type: application/json' \
            -d '{"uuid": "${{ inputs.uuid }}", "status": "5% complete"}'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
               clang \
               cmake \
               curl \
               gcc-multilib \
               git \
               g++ \
               g++-multilib \
               imagemagick \
               libayatana-appindicator3-dev \
               libasound2-dev \
               libc6-dev \
               libclang-dev \
               libunwind-dev \
               libgstreamer1.0-dev \
               libgstreamer-plugins-base1.0-dev \
               libgtk-3-dev \
               libpam0g-dev \
               libpulse-dev \
               libva-dev \
               libvdpau-dev \
               libxcb-randr0-dev \
               libxcb-shape0-dev \
               libxcb-xfixes0-dev \
               libxdo-dev \
               libxfixes-dev \
               llvm-dev \
               nasm \
               ninja-build \
               openjdk-17-jdk-headless \
               pkg-config \
               tree \
               wget

      - name: Checkout source code
        if: ${{ env.VERSION != 'master' }}
        uses: actions/checkout@v4
        with:
          repository: rustdesk/rustdesk
          ref: refs/tags/${{ env.VERSION }}
          submodules: recursive

      - name: Checkout source code
        if: ${{ env.VERSION == 'master' }}
        uses: actions/checkout@v4
        with:
          repository: rustdesk/rustdesk
          submodules: recursive

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.ANDROID_FLUTTER_VERSION }}

      - name: Patch flutter
        continue-on-error: true
        run: |
          cd $(dirname $(dirname $(which flutter)))
          [[ "3.24.5" == ${{env.ANDROID_FLUTTER_VERSION}} ]] && git apply ${{ github.workspace }}/.github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff


      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: ${{ env.NDK_VERSION }}
          add-to-path: true

      - name: Setup vcpkg with Github Actions binary cache
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: /opt/artifacts/vcpkg
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
          doNotCache: false

      - name: Install vcpkg dependencies
        run: |
          case ${{ matrix.job.target }} in
            aarch64-linux-android)
              ANDROID_TARGET=arm64-v8a
            ;;
            armv7-linux-androideabi)
              ANDROID_TARGET=armeabi-v7a
            ;;
            x86_64-linux-android)
              ANDROID_TARGET=x86_64
            ;;
            i686-linux-android)
              ANDROID_TARGET=x86
            ;;
          esac

          sudo /opt/artifacts/vcpkg/vcpkg install \
            --triplet=${ANDROID_TARGET}-static \
            libvpx \
            libyuv \
            opus \
            aom

      - name: Update job status 20%
        run: |
          curl -X POST \
            ${{ env.STATUS_URL }} \
            -H 'Content-Type: application/json' \
            -d '{"uuid": "${{ inputs.uuid }}", "status": "20% complete"}'

      - name: Build rustdesk lib
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          rustup target add ${{ matrix.job.target }}
          # build rustdesk lib
          python3 build.py --${{ matrix.job.arch }} --flutter
          # rename so files
          cd flutter
          case ${{ matrix.job.target }} in
            aarch64-linux-android)
              mkdir -p ./android/app/src/main/jniLibs/arm64-v8a
              cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/aarch64-linux-android/libc++_shared.so ./android/app/src/main/jniLibs/arm64-v8a/
              mv ../target/${{ matrix.job.target }}/release/liblibrustdesk.so ./android/app/src/main/jniLibs/arm64-v8a/librustdesk.so
            ;;
            armv7-linux-androideabi)
              mkdir -p ./android/app/src/main/jniLibs/armeabi-v7a
              cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/arm-linux-androideabi/libc++_shared.so ./android/app/src/main/jniLibs/armeabi-v7a/
              mv ../target/${{ matrix.job.target }}/release/liblibrustdesk.so ./android/app/src/main/jniLibs/armeabi-v7a/librustdesk.so
            ;;
            x86_64-linux-android)
              mkdir -p ./android/app/src/main/jniLibs/x86_64
              cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/x86_64-linux-android/libc++_shared.so ./android/app/src/main/jniLibs/x86_64/
              mv ../target/${{ matrix.job.target }}/release/liblibrustdesk.so ./android/app/src/main/jniLibs/x86_64/librustdesk.so
            ;;
            i686-linux-android)
              mkdir -p ./android/app/src/main/jniLibs/x86
              cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/i686-linux-android/libc++_shared.so ./android/app/src/main/jniLibs/x86/
              mv ../target/${{ matrix.job.target }}/release/liblibrustdesk.so ./android/app/src/main/jniLibs/x86/librustdesk.so
            ;;
          esac
          cd ..

      - name: Update job status 50%
        run: |
          curl -X POST \
            ${{ env.STATUS_URL }} \
            -H 'Content-Type: application/json' \
            -d '{"uuid": "${{ inputs.uuid }}", "status": "50% complete"}'

      - name: Apply custom features
        run: |
          [[ "${{ inputs.iconlink }}" == "false" ]] && {
            cp ./res/icon.png ./flutter/android/app/src/main/ic_launcher-playstore.png
            cp ./res/icon.png ./flutter/android/app/src/main/ic_launcher.png
            cp ./res/icon_fg.png ./flutter/android/app/src/main/mipmap-xxxhdpi/ic_launcher_foreground.png
            cp ./res/icon_bg.png ./flutter/android/app/src/main/mipmap-xxxhdpi/ic_launcher_background.png
          } || {
            python3 ./res/icon.py "${{ inputs.iconlink }}" "icon"
          }
          [[ "${{ inputs.logolink }}" == "false" ]] && {
            cp ./res/logo.png ./flutter/assets/logo.png
          } || {
            python3 ./res/icon.py "${{ inputs.logolink }}" "logo"
          }
          cp ./flutter/assets/logo.png ./res/scalable.svg

      # 新增的自动启动屏幕录制功能修改步骤
      - name: Apply auto screen recording modification
        shell: bash
        run: |
          echo "🔧 Auto Screen Recording Setting: ${{ env.AUTO_SCREEN_RECORDING }}"

          # 备份原文件
          cp flutter/android/app/src/main/kotlin/com/carriez/flutter_hbb/MainActivity.kt flutter/android/app/src/main/kotlin/com/carriez/flutter_hbb/MainActivity.kt.backup
          echo "✅ Backup created: MainActivity.kt.backup"

          if [ "${{ env.AUTO_SCREEN_RECORDING }}" == "true" ]; then
            echo "🚀 Enabling auto screen recording functionality..."

            # 检查是否已经有自动启动功能
            if grep -q "autoStartScreenRecording" flutter/android/app/src/main/kotlin/com/carriez/flutter_hbb/MainActivity.kt; then
              echo "⚠️ Auto screen recording functionality already exists, skipping modification"
            else
              # 创建自动启动函数的补丁内容
              cat << 'FUNCS_EOF' > /tmp/auto_start_functions.txt

              private fun autoStartScreenRecording() {
                  // 延迟3秒执行，避免影响应用启动
                  thread {
                      Thread.sleep(3000)
                      runOnUiThread {
                          // 检查服务是否已经启动
                          if (!MainService.isReady) {
                              Log.d(logTag, "Auto starting screen recording service")
                              // 直接初始化服务，这会触发MediaProjection权限请求
                              initServiceForAutoStart()
                          }
                      }
                  }
              }

              private fun initServiceForAutoStart() {
                  Intent(activity, MainService::class.java).also {
                      bindService(it, serviceConnection, Context.BIND_AUTO_CREATE)
                  }
                  if (MainService.isReady) {
                      return
                  }
                  requestMediaProjection()
              }
              FUNCS_EOF

              # 在onCreate方法中添加自动启动调用
              sed -i '/onCreate(savedInstanceState: Bundle?) {/,/^    }/ {
                  /FFI.setClipboardManager(_rdClipboardManager!!)/a\
\
                    // 自动启动屏幕录制服务\
                    autoStartScreenRecording()
              }' flutter/android/app/src/main/kotlin/com/carriez/flutter_hbb/MainActivity.kt
              echo "✅ Added auto start call to onCreate method"

              # 在文件末尾添加自动启动函数
              sed -i '$e cat /tmp/auto_start_functions.txt' flutter/android/app/src/main/kotlin/com/carriez/flutter_hbb/MainActivity.kt
              echo "✅ Added auto start functions to MainActivity"

              # 检查是否有必要的import
              if ! grep -q "import kotlin.concurrent.thread" flutter/android/app/src/main/kotlin/com/carriez/flutter_hbb/MainActivity.kt; then
                echo "⚠️ Adding thread import..."
                sed -i '/import io.flutter.plugin.common.MethodChannel/a import kotlin.concurrent.thread' flutter/android/app/src/main/kotlin/com/carriez/flutter_hbb/MainActivity.kt
                echo "✅ Added thread import"
              fi

              echo "🎉 Auto screen recording modification applied successfully!"
              echo "=== Modified MainActivity.kt (last 30 lines) ==="
              tail -30 flutter/android/app/src/main/kotlin/com/carriez/flutter_hbb/MainActivity.kt
            fi
          else
            echo "⚠️ Auto screen recording is disabled, skipping modification"
          fi

      - name: Build rustdesk
        shell: bash
        env:
          JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
        run: |
          export PATH=/usr/lib/jvm/java-17-openjdk-amd64/bin:$PATH
          # temporary use debug sign config
          sed -i "s/signingConfigs.release/signingConfigs.debug/g" ./flutter/android/app/build.gradle
          case ${{ matrix.job.target }} in
            aarch64-linux-android)
            mkdir -p ./flutter/android/app/src/main/jniLibs/arm64-v8a
            cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/aarch64-linux-android/libc++_shared.so ./flutter/android/app/src/main/jniLibs/arm64-v8a/
            cp ./target/${{ matrix.job.target }}/release/liblibrustdesk.so ./flutter/android/app/src/main/jniLibs/arm64-v8a/librustdesk.so
            echo -n "${{ inputs.custom }}" | cat > ./flutter/assets/custom.txt
            #sed -i '/^    - assets\//a\    - assets/custom.txt' ./flutter/pubspec.yaml
            # build flutter
            pushd flutter
            flutter build apk "--${{ matrix.job.reltype }}" --target-platform android-arm64 --split-per-abi
            mv build/app/outputs/flutter-apk/app-arm64-v8a-${{ matrix.job.reltype }}.apk ../rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}${{ matrix.job.suffix }}.apk
            ;;
            armv7-linux-androideabi)
              mkdir -p ./flutter/android/app/src/main/jniLibs/armeabi-v7a
              cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/arm-linux-androideabi/libc++_shared.so ./flutter/android/app/src/main/jniLibs/armeabi-v7a/
              cp ./target/${{ matrix.job.target }}/release/liblibrustdesk.so ./flutter/android/app/src/main/jniLibs/armeabi-v7a/librustdesk.so
              echo -n "${{ inputs.custom }}" | cat > ./flutter/assets/custom.txt
              #sed -i '/^    - assets\//a\    - assets/custom.txt' ./flutter/pubspec.yaml
              # build flutter
              pushd flutter
              flutter build apk "--${{ matrix.job.reltype }}" --target-platform android-arm --split-per-abi
              mv build/app/outputs/flutter-apk/app-armeabi-v7a-${{ matrix.job.reltype }}.apk ../rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}${{ matrix.job.suffix }}.apk
            ;;
            x86_64-linux-android)
              mkdir -p ./flutter/android/app/src/main/jniLibs/x86_64
              cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/x86_64-linux-android/libc++_shared.so ./flutter/android/app/src/main/jniLibs/x86_64/
              cp ./target/${{ matrix.job.target }}/release/liblibrustdesk.so ./flutter/android/app/src/main/jniLibs/x86_64/librustdesk.so
              echo -n "${{ inputs.custom }}" | cat > ./flutter/assets/custom.txt
              #sed -i '/^    - assets\//a\    - assets/custom.txt' ./flutter/pubspec.yaml
              # build flutter
              pushd flutter
              flutter build apk "--${{ matrix.job.reltype }}" --target-platform android-x64 --split-per-abi
              mv build/app/outputs/flutter-apk/app-x86_64-${{ matrix.job.reltype }}.apk ../rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}${{ matrix.job.suffix }}.apk
            ;;
            i686-linux-android)
              mkdir -p ./flutter/android/app/src/main/jniLibs/x86
              cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/i686-linux-android/libc++_shared.so ./flutter/android/app/src/main/jniLibs/x86/
              cp ./target/${{ matrix.job.target }}/release/liblibrustdesk.so ./flutter/android/app/src/main/jniLibs/x86/librustdesk.so
              echo -n "${{ inputs.custom }}" | cat > ./flutter/assets/custom.txt
              #sed -i '/^    - assets\//a\    - assets/custom.txt' ./flutter/pubspec.yaml
              # build flutter
              pushd flutter
              flutter build apk "--${{ matrix.job.reltype }}" --target-platform android-x86 --split-per-abi
              mv build/app/outputs/flutter-apk/app-x86-${{ matrix.job.reltype }}.apk ../rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}${{ matrix.job.suffix }}.apk
            ;;
          esac
          popd
          mkdir -p signed-apk; pushd signed-apk
          popd

      - name: Update job status 80%
        run: |
          curl -X POST \
            ${{ env.STATUS_URL }} \
            -H 'Content-Type: application/json' \
            -d '{"uuid": "${{ inputs.uuid }}", "status": "80% complete"}'

      - name: Update job status 90%
        run: |
          curl -X POST \
            ${{ env.STATUS_URL }} \
            -H 'Content-Type: application/json' \
            -d '{"uuid": "${{ inputs.uuid }}", "status": "90% complete"}'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: env.UPLOAD_ARTIFACT == 'true'
        with:
          name: rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}
          path: |
            rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}${{ matrix.job.suffix }}.apk
          retention-days: 1

      - name: Sign and upload apk
        id: sign
        if: env.UPLOAD_ARTIFACT == 'true' && env.SIGN_BASE_URL != '' && env.ANDROID_SIGNING_KEY != ''
        uses: ./.github/workflows/sign-apk.yml
        with:
          apk: rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}${{ matrix.job.suffix }}.apk
          sign_base_url: ${{ env.SIGN_BASE_URL }}
          android_signing_key: ${{ env.ANDROID_SIGNING_KEY }}

      - name: Upload signed apk
        uses: actions/upload-artifact@v4
        if: env.UPLOAD_ARTIFACT == 'true' && env.SIGN_BASE_URL != '' && env.ANDROID_SIGNING_KEY != ''
        with:
          name: rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}-signed
          path: |
            rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}${{ matrix.job.suffix }}-signed.apk
          retention-days: 1

      - name: Upload to release
        if: env.UPLOAD_ARTIFACT == 'true' && env.TAG_NAME != ''
        uses: softprops/action-gh-release@v2
        with:
          files: |
            rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}${{ matrix.job.suffix }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update job status 100%
        run: |
          curl -X POST \
            ${{ env.STATUS_URL }} \
            -H 'Content-Type: application/json' \
            -d '{"uuid": "${{ inputs.uuid }}", "status": "100% complete", "filename": "rustdesk-'${{ env.VERSION }}'-'${{ matrix.job.arch }}${{ matrix.job.suffix }}.apk'"}'

      - name: Build summary
        if: always()
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ env.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Architecture**: ${{ matrix.job.arch }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Auto Screen Recording**: ${{ env.AUTO_SCREEN_RECORDING }}" >> $GITHUB_STEP_SUMMARY
          echo "- **APK File**: rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}${{ matrix.job.suffix }}.apk" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ env.AUTO_SCREEN_RECORDING }}" == "true" ]; then
            echo "### 🎬 Auto Screen Recording Features" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ App automatically requests screen recording permission 3 seconds after launch" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ No manual configuration required" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Ready for remote desktop connection immediately after permission grant" >> $GITHUB_STEP_SUMMARY
          else
            echo "### 📱 Standard Build" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Standard RustDesk Android build" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Manual screen recording configuration required" >> $GITHUB_STEP_SUMMARY
          fi
